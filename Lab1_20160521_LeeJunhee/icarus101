#! /c/iverilog/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_01228EC0 .scope module, "TB" "TB" 2 13;
 .timescale 0 0;
v008A7F50_0 .var "A", 15 0;
v008A7BE0_0 .net "ALU_OUT", 15 0, v008A7EF8_0; 1 drivers
v008A7A28_0 .var "B", 15 0;
v008A7B88_0 .net "Cout", 0 0, v008A79D0_0; 1 drivers
v008A7A80_0 .var "Failed", 15 0;
v008A7AD8_0 .var "Passed", 15 0;
v008A7C38_0 .var "SEL", 2 0;
S_012285B8 .scope task, "AddTest" "AddTest" 2 70, 2 70, S_01228EC0;
 .timescale 0 0;
TD_TB.AddTest ;
    %set/v v008A7C38_0, 0, 3;
    %movi 8, 1684286769, 32;
    %movi 40, 65, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %set/v v008A78C8_0, 0, 16;
    %set/v v008A7EA0_0, 0, 16;
    %set/v v008A7D40_0, 0, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1684286770, 32;
    %movi 40, 65, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 1, 16;
    %set/v v008A78C8_0, 137, 16;
    %set/v v008A7EA0_0, 0, 16;
    %movi 137, 1, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1684286771, 32;
    %movi 40, 65, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 2, 16;
    %set/v v008A78C8_0, 137, 16;
    %movi 137, 3, 16;
    %set/v v008A7EA0_0, 137, 16;
    %movi 137, 5, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1684286772, 32;
    %movi 40, 65, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 3, 16;
    %set/v v008A78C8_0, 137, 16;
    %movi 137, 2, 16;
    %set/v v008A7EA0_0, 137, 16;
    %movi 137, 5, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1684286773, 32;
    %movi 40, 65, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 2, 16;
    %set/v v008A78C8_0, 137, 16;
    %movi 137, 3, 16;
    %set/v v008A7EA0_0, 137, 16;
    %movi 137, 5, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1684286774, 32;
    %movi 40, 65, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 3, 16;
    %set/v v008A78C8_0, 137, 16;
    %movi 137, 2, 16;
    %set/v v008A7EA0_0, 137, 16;
    %movi 137, 5, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1684286775, 32;
    %movi 40, 65, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 32768, 16;
    %set/v v008A78C8_0, 137, 16;
    %movi 137, 32768, 16;
    %set/v v008A7EA0_0, 137, 16;
    %set/v v008A7D40_0, 0, 16;
    %set/v v008A7D98_0, 1, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1684286776, 32;
    %movi 40, 65, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %set/v v008A78C8_0, 1, 16;
    %movi 137, 1, 16;
    %set/v v008A7EA0_0, 137, 16;
    %set/v v008A7D40_0, 0, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1684286777, 32;
    %movi 40, 65, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %set/v v008A78C8_0, 1, 16;
    %set/v v008A7EA0_0, 1, 16;
    %movi 137, 65534, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %end;
S_01228D28 .scope task, "ArithmeticTest" "ArithmeticTest" 2 48, 2 48, S_01228EC0;
 .timescale 0 0;
TD_TB.ArithmeticTest ;
    %fork TD_TB.AddTest, S_012285B8;
    %join;
    %fork TD_TB.SubTest, S_012289F8;
    %join;
    %end;
S_01228420 .scope task, "BitwiseTest" "BitwiseTest" 2 55, 2 55, S_01228EC0;
 .timescale 0 0;
TD_TB.BitwiseTest ;
    %fork TD_TB.NandTest, S_01229168;
    %join;
    %fork TD_TB.NorTest, S_01229058;
    %join;
    %fork TD_TB.NotTest, S_01228C18;
    %join;
    %end;
S_01228DB0 .scope task, "LrsTest" "LrsTest" 2 123, 2 123, S_01228EC0;
 .timescale 0 0;
TD_TB.LrsTest ;
    %movi 8, 5, 3;
    %set/v v008A7C38_0, 8, 3;
    %movi 8, 1920150833, 32;
    %movi 40, 76, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 10, 16;
    %set/v v008A78C8_0, 137, 16;
    %set/v v008A7EA0_0, 0, 16;
    %movi 137, 5, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1920150834, 32;
    %movi 40, 76, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 1, 16;
    %set/v v008A78C8_0, 137, 16;
    %set/v v008A7EA0_0, 0, 16;
    %set/v v008A7D40_0, 0, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1920150835, 32;
    %movi 40, 76, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 65530, 16;
    %set/v v008A78C8_0, 137, 16;
    %set/v v008A7EA0_0, 0, 16;
    %movi 137, 32765, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1920150836, 32;
    %movi 40, 76, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %set/v v008A78C8_0, 1, 16;
    %set/v v008A7EA0_0, 0, 16;
    %movi 137, 32767, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %end;
S_01229168 .scope task, "NandTest" "NandTest" 2 98, 2 98, S_01228EC0;
 .timescale 0 0;
TD_TB.NandTest ;
    %movi 8, 2, 3;
    %set/v v008A7C38_0, 8, 3;
    %movi 8, 1852058929, 32;
    %movi 40, 20065, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 43690, 16;
    %set/v v008A78C8_0, 137, 16;
    %movi 137, 21845, 16;
    %set/v v008A7EA0_0, 137, 16;
    %set/v v008A7D40_0, 1, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1852058930, 32;
    %movi 40, 20065, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 26214, 16;
    %set/v v008A78C8_0, 137, 16;
    %movi 137, 21845, 16;
    %set/v v008A7EA0_0, 137, 16;
    %movi 137, 48059, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %end;
S_01229058 .scope task, "NorTest" "NorTest" 2 106, 2 106, S_01228EC0;
 .timescale 0 0;
TD_TB.NorTest ;
    %movi 8, 3, 3;
    %set/v v008A7C38_0, 8, 3;
    %movi 8, 1869753649, 32;
    %movi 40, 78, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 21845, 16;
    %set/v v008A78C8_0, 137, 16;
    %movi 137, 56797, 16;
    %set/v v008A7EA0_0, 137, 16;
    %movi 137, 8738, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1869753650, 32;
    %movi 40, 78, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 34952, 16;
    %set/v v008A78C8_0, 137, 16;
    %movi 137, 4369, 16;
    %set/v v008A7EA0_0, 137, 16;
    %movi 137, 26214, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %end;
S_01228C18 .scope task, "NotTest" "NotTest" 2 114, 2 114, S_01228EC0;
 .timescale 0 0;
TD_TB.NotTest ;
    %movi 8, 4, 3;
    %set/v v008A7C38_0, 8, 3;
    %movi 8, 1869884721, 32;
    %movi 40, 78, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %set/v v008A78C8_0, 0, 16;
    %set/v v008A7EA0_0, 0, 16;
    %set/v v008A7D40_0, 1, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1869884722, 32;
    %movi 40, 78, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 1, 16;
    %set/v v008A78C8_0, 137, 16;
    %set/v v008A7EA0_0, 0, 16;
    %movi 137, 65534, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1869884723, 32;
    %movi 40, 78, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 51966, 16;
    %set/v v008A78C8_0, 137, 16;
    %set/v v008A7EA0_0, 0, 16;
    %movi 137, 13569, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %end;
S_01228B90 .scope task, "ShiftTest" "ShiftTest" 2 63, 2 63, S_01228EC0;
 .timescale 0 0;
TD_TB.ShiftTest ;
    %fork TD_TB.LrsTest, S_01228DB0;
    %join;
    %end;
S_012289F8 .scope task, "SubTest" "SubTest" 2 85, 2 85, S_01228EC0;
 .timescale 0 0;
TD_TB.SubTest ;
    %movi 8, 1, 3;
    %set/v v008A7C38_0, 8, 3;
    %movi 8, 1969368369, 32;
    %movi 40, 83, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %set/v v008A78C8_0, 0, 16;
    %set/v v008A7EA0_0, 0, 16;
    %set/v v008A7D40_0, 0, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1969368370, 32;
    %movi 40, 83, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 1, 16;
    %set/v v008A78C8_0, 137, 16;
    %set/v v008A7EA0_0, 0, 16;
    %movi 137, 1, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1969368371, 32;
    %movi 40, 83, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %set/v v008A78C8_0, 0, 16;
    %movi 137, 1, 16;
    %set/v v008A7EA0_0, 137, 16;
    %set/v v008A7D40_0, 1, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1969368372, 32;
    %movi 40, 83, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %set/v v008A78C8_0, 1, 16;
    %set/v v008A7EA0_0, 1, 16;
    %set/v v008A7D40_0, 0, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1969368373, 32;
    %movi 40, 83, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %movi 137, 3, 16;
    %set/v v008A78C8_0, 137, 16;
    %movi 137, 2, 16;
    %set/v v008A7EA0_0, 137, 16;
    %movi 137, 1, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1969368374, 32;
    %movi 40, 83, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %set/v v008A78C8_0, 0, 16;
    %movi 137, 2, 16;
    %set/v v008A7EA0_0, 137, 16;
    %movi 137, 65534, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %movi 8, 1969368375, 32;
    %movi 40, 83, 32;
    %movi 72, 0, 32;
    %movi 104, 0, 32;
    %movi 136, 0, 1;
    %set/v v008A7920_0, 8, 129;
    %set/v v008A78C8_0, 0, 16;
    %set/v v008A7EA0_0, 1, 16;
    %movi 137, 1, 16;
    %set/v v008A7D40_0, 137, 16;
    %set/v v008A7D98_0, 0, 1;
    %fork TD_TB.Test, S_01229300;
    %join;
    %end;
S_01229300 .scope task, "Test" "Test" 2 133, 2 133, S_01228EC0;
 .timescale 0 0;
v008A78C8_0 .var "A_", 15 0;
v008A7EA0_0 .var "B_", 15 0;
v008A7D40_0 .var "C_expected", 15 0;
v008A7D98_0 .var "Cout_expected", 0 0;
v008A7920_0 .var "test_name", 128 0;
TD_TB.Test ;
    %vpi_call 2 140 "$display", "TEST %s :", v008A7920_0;
    %load/v 8, v008A78C8_0, 16;
    %set/v v008A7F50_0, 8, 16;
    %load/v 8, v008A7EA0_0, 16;
    %set/v v008A7A28_0, 8, 16;
    %delay 1, 0;
    %load/v 8, v008A7BE0_0, 16;
    %load/v 24, v008A7D40_0, 16;
    %cmp/u 8, 24, 16;
    %mov 8, 4, 1;
    %load/v 9, v008A7B88_0, 1;
    %load/v 10, v008A7D98_0, 1;
    %cmp/u 9, 10, 1;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_9.0, 8;
    %vpi_call 2 145 "$display", "PASSED";
    %load/v 8, v008A7AD8_0, 16;
    %mov 24, 0, 16;
    %addi 8, 1, 32;
    %set/v v008A7AD8_0, 8, 16;
    %jmp T_9.1;
T_9.0 ;
    %vpi_call 2 149 "$display", "FAILED";
    %vpi_call 2 150 "$display", "A = %0b, B = %0b, AluOut = %0b (Ans : %0b), Cout = %0b (Ans : %0b)", v008A78C8_0, v008A7EA0_0, v008A7BE0_0, v008A7D40_0, v008A7B88_0, v008A7D98_0;
    %load/v 8, v008A7A80_0, 16;
    %mov 24, 0, 16;
    %addi 8, 1, 32;
    %set/v v008A7A80_0, 8, 16;
T_9.1 ;
    %end;
S_01228B08 .scope module, "YourALU" "ALU" 2 24, 3 1, S_01228EC0;
 .timescale 0 0;
v008A7C90_0 .net "A", 15 0, v008A7F50_0; 1 drivers
v008A7870_0 .alias "ALU_OUT", 15 0, v008A7BE0_0;
v008A7EF8_0 .var "ALU_OUT_R", 15 0;
v008A7978_0 .net "B", 15 0, v008A7A28_0; 1 drivers
v008A7DF0_0 .var "C", 3 1;
v008A7CE8_0 .var "C_", 3 1;
v008A7B30_0 .alias "Cout", 0 0, v008A7B88_0;
v008A7FA8_0 .var "Cout_", 0 0;
v008A79D0_0 .var "Overflow_R", 0 0;
v008A7E48_0 .net "SEL", 2 0, v008A7C38_0; 1 drivers
E_00870C90/0 .event edge, v008A7E48_0, v008A7C90_0, v008A7978_0, v01222B98_0;
E_00870C90/1 .event edge, v00861690_0, v008A7EF8_0;
E_00870C90 .event/or E_00870C90/0, E_00870C90/1;
S_01228970 .scope task, "Adder16" "Adder16" 3 46, 3 46, S_01228B08;
 .timescale 0 0;
v01222B40_0 .var "Ci", 0 0;
v01222B98_0 .var "Co", 0 0;
v008615E0_0 .var "P", 15 0;
v00861638_0 .var "Q", 15 0;
v00861690_0 .var "S", 15 0;
TD_TB.YourALU.Adder16 ;
    %load/v 8, v008615E0_0, 4; Only need 4 of 16 bits
; Save base=8 wid=4 in lookaside.
    %set/v v0085DDC8_0, 8, 4;
    %load/v 8, v00861638_0, 4; Only need 4 of 16 bits
; Save base=8 wid=4 in lookaside.
    %set/v v0122E228_0, 8, 4;
    %load/v 8, v01222B40_0, 1;
    %set/v v0122E280_0, 8, 1;
    %fork TD_TB.YourALU.Adder4, S_01228CA0;
    %join;
    %load/v 8, v0122E2D8_0, 1;
    %ix/load 0, 0, 0;
    %set/x0 v008A7DF0_0, 8, 1;
    %load/v 8, v01222AE8_0, 4;
    %ix/load 0, 0, 0;
    %set/x0 v00861690_0, 8, 4;
    %ix/load 1, 4, 0;
    %mov 4, 0, 1;
    %jmp/1 T_10.2, 4;
    %load/x1p 8, v008615E0_0, 4;
    %jmp T_10.3;
T_10.2 ;
    %mov 8, 2, 4;
T_10.3 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0085DDC8_0, 8, 4;
    %ix/load 1, 4, 0;
    %mov 4, 0, 1;
    %jmp/1 T_10.4, 4;
    %load/x1p 8, v00861638_0, 4;
    %jmp T_10.5;
T_10.4 ;
    %mov 8, 2, 4;
T_10.5 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0122E228_0, 8, 4;
    %load/v 8, v008A7DF0_0, 1; Only need 1 of 3 bits
; Save base=8 wid=1 in lookaside.
    %set/v v0122E280_0, 8, 1;
    %fork TD_TB.YourALU.Adder4, S_01228CA0;
    %join;
    %load/v 8, v0122E2D8_0, 1;
    %ix/load 0, 1, 0;
    %set/x0 v008A7DF0_0, 8, 1;
    %load/v 8, v01222AE8_0, 4;
    %ix/load 0, 4, 0;
    %set/x0 v00861690_0, 8, 4;
    %ix/load 1, 8, 0;
    %mov 4, 0, 1;
    %jmp/1 T_10.6, 4;
    %load/x1p 8, v008615E0_0, 4;
    %jmp T_10.7;
T_10.6 ;
    %mov 8, 2, 4;
T_10.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0085DDC8_0, 8, 4;
    %ix/load 1, 8, 0;
    %mov 4, 0, 1;
    %jmp/1 T_10.8, 4;
    %load/x1p 8, v00861638_0, 4;
    %jmp T_10.9;
T_10.8 ;
    %mov 8, 2, 4;
T_10.9 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0122E228_0, 8, 4;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_10.10, 4;
    %load/x1p 8, v008A7DF0_0, 1;
    %jmp T_10.11;
T_10.10 ;
    %mov 8, 2, 1;
T_10.11 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0122E280_0, 8, 1;
    %fork TD_TB.YourALU.Adder4, S_01228CA0;
    %join;
    %load/v 8, v0122E2D8_0, 1;
    %ix/load 0, 2, 0;
    %set/x0 v008A7DF0_0, 8, 1;
    %load/v 8, v01222AE8_0, 4;
    %ix/load 0, 8, 0;
    %set/x0 v00861690_0, 8, 4;
    %ix/load 1, 12, 0;
    %mov 4, 0, 1;
    %jmp/1 T_10.12, 4;
    %load/x1p 8, v008615E0_0, 4;
    %jmp T_10.13;
T_10.12 ;
    %mov 8, 2, 4;
T_10.13 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0085DDC8_0, 8, 4;
    %ix/load 1, 12, 0;
    %mov 4, 0, 1;
    %jmp/1 T_10.14, 4;
    %load/x1p 8, v00861638_0, 4;
    %jmp T_10.15;
T_10.14 ;
    %mov 8, 2, 4;
T_10.15 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0122E228_0, 8, 4;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_10.16, 4;
    %load/x1p 8, v008A7DF0_0, 1;
    %jmp T_10.17;
T_10.16 ;
    %mov 8, 2, 1;
T_10.17 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0122E280_0, 8, 1;
    %fork TD_TB.YourALU.Adder4, S_01228CA0;
    %join;
    %load/v 8, v0122E2D8_0, 1;
    %set/v v01222B98_0, 8, 1;
    %load/v 8, v01222AE8_0, 4;
    %ix/load 0, 12, 0;
    %set/x0 v00861690_0, 8, 4;
    %end;
S_01228CA0 .scope task, "Adder4" "Adder4" 3 32, 3 32, S_01228B08;
 .timescale 0 0;
v0085DDC8_0 .var "A_", 3 0;
v0122E228_0 .var "B_", 3 0;
v0122E280_0 .var "Ci_", 0 0;
v0122E2D8_0 .var "Co_", 0 0;
v01222AE8_0 .var "S_", 3 0;
TD_TB.YourALU.Adder4 ;
    %load/v 8, v0085DDC8_0, 1; Only need 1 of 4 bits
; Save base=8 wid=1 in lookaside.
    %set/v v0085DD18_0, 8, 1;
    %load/v 8, v0122E228_0, 1; Only need 1 of 4 bits
; Save base=8 wid=1 in lookaside.
    %set/v v0085DD70_0, 8, 1;
    %load/v 8, v0122E280_0, 1;
    %set/v v0085DFA8_0, 8, 1;
    %fork TD_TB.YourALU.FullAdder, S_012290E0;
    %join;
    %load/v 8, v0085E000_0, 1;
    %ix/load 0, 0, 0;
    %set/x0 v008A7CE8_0, 8, 1;
    %load/v 8, v0085E058_0, 1;
    %ix/load 0, 0, 0;
    %set/x0 v01222AE8_0, 8, 1;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_11.18, 4;
    %load/x1p 8, v0085DDC8_0, 1;
    %jmp T_11.19;
T_11.18 ;
    %mov 8, 2, 1;
T_11.19 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0085DD18_0, 8, 1;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_11.20, 4;
    %load/x1p 8, v0122E228_0, 1;
    %jmp T_11.21;
T_11.20 ;
    %mov 8, 2, 1;
T_11.21 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0085DD70_0, 8, 1;
    %load/v 8, v008A7CE8_0, 1; Only need 1 of 3 bits
; Save base=8 wid=1 in lookaside.
    %set/v v0085DFA8_0, 8, 1;
    %fork TD_TB.YourALU.FullAdder, S_012290E0;
    %join;
    %load/v 8, v0085E000_0, 1;
    %ix/load 0, 1, 0;
    %set/x0 v008A7CE8_0, 8, 1;
    %load/v 8, v0085E058_0, 1;
    %ix/load 0, 1, 0;
    %set/x0 v01222AE8_0, 8, 1;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_11.22, 4;
    %load/x1p 8, v0085DDC8_0, 1;
    %jmp T_11.23;
T_11.22 ;
    %mov 8, 2, 1;
T_11.23 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0085DD18_0, 8, 1;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_11.24, 4;
    %load/x1p 8, v0122E228_0, 1;
    %jmp T_11.25;
T_11.24 ;
    %mov 8, 2, 1;
T_11.25 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0085DD70_0, 8, 1;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_11.26, 4;
    %load/x1p 8, v008A7CE8_0, 1;
    %jmp T_11.27;
T_11.26 ;
    %mov 8, 2, 1;
T_11.27 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0085DFA8_0, 8, 1;
    %fork TD_TB.YourALU.FullAdder, S_012290E0;
    %join;
    %load/v 8, v0085E000_0, 1;
    %ix/load 0, 2, 0;
    %set/x0 v008A7CE8_0, 8, 1;
    %load/v 8, v0085E058_0, 1;
    %ix/load 0, 2, 0;
    %set/x0 v01222AE8_0, 8, 1;
    %ix/load 1, 3, 0;
    %mov 4, 0, 1;
    %jmp/1 T_11.28, 4;
    %load/x1p 8, v0085DDC8_0, 1;
    %jmp T_11.29;
T_11.28 ;
    %mov 8, 2, 1;
T_11.29 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0085DD18_0, 8, 1;
    %ix/load 1, 3, 0;
    %mov 4, 0, 1;
    %jmp/1 T_11.30, 4;
    %load/x1p 8, v0122E228_0, 1;
    %jmp T_11.31;
T_11.30 ;
    %mov 8, 2, 1;
T_11.31 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0085DD70_0, 8, 1;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_11.32, 4;
    %load/x1p 8, v008A7CE8_0, 1;
    %jmp T_11.33;
T_11.32 ;
    %mov 8, 2, 1;
T_11.33 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0085DFA8_0, 8, 1;
    %fork TD_TB.YourALU.FullAdder, S_012290E0;
    %join;
    %load/v 8, v0085E000_0, 1;
    %set/v v0122E2D8_0, 8, 1;
    %load/v 8, v0085E058_0, 1;
    %ix/load 0, 3, 0;
    %set/x0 v01222AE8_0, 8, 1;
    %end;
S_012290E0 .scope task, "FullAdder" "FullAdder" 3 22, 3 22, S_01228B08;
 .timescale 0 0;
v0085DFA8_0 .var "Cin_", 0 0;
v0085E000_0 .var "Cout_", 0 0;
v0085E058_0 .var "Sum", 0 0;
v0085DD18_0 .var "X", 0 0;
v0085DD70_0 .var "Y", 0 0;
TD_TB.YourALU.FullAdder ;
    %load/v 8, v0085DD18_0, 1;
    %load/v 9, v0085DD70_0, 1;
    %xor 8, 9, 1;
    %load/v 9, v0085DFA8_0, 1;
    %xor 8, 9, 1;
    %cassign/v v0085E058_0, 8, 1;
    %load/v 9, v0085DD18_0, 1;
    %load/v 10, v0085DD70_0, 1;
    %and 9, 10, 1;
    %load/v 10, v0085DD70_0, 1;
    %load/v 11, v0085DFA8_0, 1;
    %and 10, 11, 1;
    %or 9, 10, 1;
    %load/v 10, v0085DD18_0, 1;
    %load/v 11, v0085DFA8_0, 1;
    %and 10, 11, 1;
    %or 9, 10, 1;
    %cassign/v v0085E000_0, 9, 1;
    %end;
    .scope S_01228B08;
T_13 ;
    %wait E_00870C90;
    %load/v 10, v008A7E48_0, 3;
    %cmpi/u 10, 0, 3;
    %jmp/1 T_13.0, 6;
    %cmpi/u 10, 1, 3;
    %jmp/1 T_13.1, 6;
    %cmpi/u 10, 2, 3;
    %jmp/1 T_13.2, 6;
    %cmpi/u 10, 3, 3;
    %jmp/1 T_13.3, 6;
    %cmpi/u 10, 4, 3;
    %jmp/1 T_13.4, 6;
    %cmpi/u 10, 5, 3;
    %jmp/1 T_13.5, 6;
    %jmp T_13.6;
T_13.0 ;
    %load/v 10, v008A7C90_0, 16;
    %set/v v008615E0_0, 10, 16;
    %load/v 10, v008A7978_0, 16;
    %set/v v00861638_0, 10, 16;
    %set/v v01222B40_0, 0, 1;
    %fork TD_TB.YourALU.Adder16, S_01228970;
    %join;
    %load/v 10, v01222B98_0, 1;
    %set/v v008A7FA8_0, 10, 1;
    %load/v 10, v00861690_0, 16;
    %set/v v008A7EF8_0, 10, 16;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_13.7, 4;
    %load/x1p 10, v008A7C90_0, 1;
    %jmp T_13.8;
T_13.7 ;
    %mov 10, 2, 1;
T_13.8 ;
; Save base=10 wid=1 in lookaside.
    %inv 10, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_13.9, 4;
    %load/x1p 11, v008A7978_0, 1;
    %jmp T_13.10;
T_13.9 ;
    %mov 11, 2, 1;
T_13.10 ;
; Save base=11 wid=1 in lookaside.
    %inv 11, 1;
    %and 10, 11, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_13.11, 4;
    %load/x1p 11, v008A7EF8_0, 1;
    %jmp T_13.12;
T_13.11 ;
    %mov 11, 2, 1;
T_13.12 ;
; Save base=11 wid=1 in lookaside.
    %and 10, 11, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_13.13, 4;
    %load/x1p 11, v008A7C90_0, 1;
    %jmp T_13.14;
T_13.13 ;
    %mov 11, 2, 1;
T_13.14 ;
; Save base=11 wid=1 in lookaside.
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_13.15, 4;
    %load/x1p 12, v008A7978_0, 1;
    %jmp T_13.16;
T_13.15 ;
    %mov 12, 2, 1;
T_13.16 ;
; Save base=12 wid=1 in lookaside.
    %and 11, 12, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_13.17, 4;
    %load/x1p 12, v008A7EF8_0, 1;
    %jmp T_13.18;
T_13.17 ;
    %mov 12, 2, 1;
T_13.18 ;
; Save base=12 wid=1 in lookaside.
    %inv 12, 1;
    %and 11, 12, 1;
    %or 10, 11, 1;
    %set/v v008A79D0_0, 10, 1;
    %jmp T_13.6;
T_13.1 ;
    %load/v 10, v008A7C90_0, 16;
    %set/v v008615E0_0, 10, 16;
    %load/v 10, v008A7978_0, 16;
    %inv 10, 16;
    %set/v v00861638_0, 10, 16;
    %set/v v01222B40_0, 1, 1;
    %fork TD_TB.YourALU.Adder16, S_01228970;
    %join;
    %load/v 10, v01222B98_0, 1;
    %set/v v008A7FA8_0, 10, 1;
    %load/v 10, v00861690_0, 16;
    %set/v v008A7EF8_0, 10, 16;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_13.19, 4;
    %load/x1p 10, v008A7C90_0, 1;
    %jmp T_13.20;
T_13.19 ;
    %mov 10, 2, 1;
T_13.20 ;
; Save base=10 wid=1 in lookaside.
    %inv 10, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_13.21, 4;
    %load/x1p 11, v008A7978_0, 1;
    %jmp T_13.22;
T_13.21 ;
    %mov 11, 2, 1;
T_13.22 ;
; Save base=11 wid=1 in lookaside.
    %and 10, 11, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_13.23, 4;
    %load/x1p 11, v008A7EF8_0, 1;
    %jmp T_13.24;
T_13.23 ;
    %mov 11, 2, 1;
T_13.24 ;
; Save base=11 wid=1 in lookaside.
    %and 10, 11, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_13.25, 4;
    %load/x1p 11, v008A7C90_0, 1;
    %jmp T_13.26;
T_13.25 ;
    %mov 11, 2, 1;
T_13.26 ;
; Save base=11 wid=1 in lookaside.
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_13.27, 4;
    %load/x1p 12, v008A7978_0, 1;
    %jmp T_13.28;
T_13.27 ;
    %mov 12, 2, 1;
T_13.28 ;
; Save base=12 wid=1 in lookaside.
    %inv 12, 1;
    %and 11, 12, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_13.29, 4;
    %load/x1p 12, v008A7EF8_0, 1;
    %jmp T_13.30;
T_13.29 ;
    %mov 12, 2, 1;
T_13.30 ;
; Save base=12 wid=1 in lookaside.
    %inv 12, 1;
    %and 11, 12, 1;
    %or 10, 11, 1;
    %set/v v008A79D0_0, 10, 1;
    %jmp T_13.6;
T_13.2 ;
    %load/v 10, v008A7C90_0, 16;
    %load/v 26, v008A7978_0, 16;
    %and 10, 26, 16;
    %inv 10, 16;
    %set/v v008A7EF8_0, 10, 16;
    %set/v v008A79D0_0, 0, 1;
    %jmp T_13.6;
T_13.3 ;
    %load/v 10, v008A7C90_0, 16;
    %load/v 26, v008A7978_0, 16;
    %or 10, 26, 16;
    %inv 10, 16;
    %set/v v008A7EF8_0, 10, 16;
    %set/v v008A79D0_0, 0, 1;
    %jmp T_13.6;
T_13.4 ;
    %load/v 10, v008A7C90_0, 16;
    %inv 10, 16;
    %set/v v008A7EF8_0, 10, 16;
    %set/v v008A79D0_0, 0, 1;
    %jmp T_13.6;
T_13.5 ;
    %load/v 10, v008A7C90_0, 16;
    %ix/load 0, 1, 0;
    %mov 4, 0, 1;
    %shiftr/i0  10, 16;
    %set/v v008A7EF8_0, 10, 16;
    %set/v v008A79D0_0, 0, 1;
    %jmp T_13.6;
T_13.6 ;
    %jmp T_13;
    .thread T_13, $push;
    .scope S_01228EC0;
T_14 ;
    %vpi_call 2 33 "$dumpfile", "myfile.dmp";
    %vpi_call 2 34 "$dumpvars";
    %vpi_call 2 36 "$display", "Let's start testing ALU!";
    %set/v v008A7AD8_0, 0, 16;
    %set/v v008A7A80_0, 0, 16;
    %fork TD_TB.ArithmeticTest, S_01228D28;
    %join;
    %fork TD_TB.BitwiseTest, S_01228420;
    %join;
    %fork TD_TB.ShiftTest, S_01228B90;
    %join;
    %vpi_call 2 44 "$display", "Passed = %0d, Failed = %0d", v008A7AD8_0, v008A7A80_0;
    %vpi_call 2 45 "$finish";
    %end;
    .thread T_14;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "./TB.v";
    "./ALU.v";
