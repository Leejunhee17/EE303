$date
	Fri May 14 19:35:25 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TB $end
$var wire 16 ! ALU_OUT [15:0] $end
$var wire 1 " Cout $end
$var reg 16 # A [15:0] $end
$var reg 16 $ B [15:0] $end
$var reg 16 % Failed [15:0] $end
$var reg 16 & Passed [15:0] $end
$var reg 3 ' SEL [2:0] $end
$scope module YourALU $end
$var wire 16 ( A [15:0] $end
$var wire 16 ) ALU_OUT [15:0] $end
$var wire 16 * B [15:0] $end
$var wire 1 " Cout $end
$var wire 3 + SEL [2:0] $end
$var reg 16 , ALU_OUT_R [15:0] $end
$var reg 3 - C [3:1] $end
$var reg 3 . C_ [3:1] $end
$var reg 1 / Cout_ $end
$var reg 1 0 Overflow_R $end
$scope task Adder16 $end
$var reg 1 1 Ci $end
$var reg 1 2 Co $end
$var reg 16 3 P [15:0] $end
$var reg 16 4 Q [15:0] $end
$var reg 16 5 S [15:0] $end
$upscope $end
$scope task Adder4 $end
$var reg 4 6 A_ [3:0] $end
$var reg 4 7 B_ [3:0] $end
$var reg 1 8 Ci_ $end
$var reg 1 9 Co_ $end
$var reg 4 : S_ [3:0] $end
$upscope $end
$scope task FullAdder $end
$var reg 1 ; Cin_ $end
$var reg 1 < Cout_ $end
$var reg 1 = Sum $end
$var reg 1 > X $end
$var reg 1 ? Y $end
$upscope $end
$upscope $end
$scope task AddTest $end
$upscope $end
$scope task ArithmeticTest $end
$upscope $end
$scope task BitwiseTest $end
$upscope $end
$scope task LrsTest $end
$upscope $end
$scope task NandTest $end
$upscope $end
$scope task NorTest $end
$upscope $end
$scope task NotTest $end
$upscope $end
$scope task ShiftTest $end
$upscope $end
$scope task SubTest $end
$upscope $end
$scope task Test $end
$var reg 16 @ A_ [15:0] $end
$var reg 16 A B_ [15:0] $end
$var reg 16 B C_expected [15:0] $end
$var reg 1 C Cout_expected $end
$var reg 129 D test_name [128:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000101100100011001000010110100110001 D
0C
b0 B
b0 A
b0 @
0?
0>
0=
0<
0;
b0 :
09
08
b0 7
b0 6
b0 5
b0 4
b0 3
02
01
00
0/
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
0"
b0 !
$end
#1
b1 ,
b1 !
b1 )
b1 5
b0 -
b0 :
b0 .
0<
0=
0>
b0 6
b1 3
b1 #
b1 (
b1 B
b1 @
b100000101100100011001000010110100110010 D
b1 &
#2
b101 ,
b101 !
b101 )
b101 5
b0 -
0;
0>
b0 :
b0 .
0<
0=
0?
b0 7
b0 6
b11 4
b10 3
b11 $
b11 *
b10 #
b10 (
b101 B
b11 A
b10 @
b100000101100100011001000010110100110011 D
b10 &
#3
b101 5
b0 -
0;
0?
b0 :
b0 .
0<
0=
0>
b0 7
b0 6
b10 4
b11 3
b10 $
b10 *
b11 #
b11 (
b10 A
b11 @
b100000101100100011001000010110100110100 D
b11 &
#4
b101 5
b0 -
0;
0>
b0 :
b0 .
0<
0=
0?
b0 7
b0 6
b11 4
b10 3
b11 $
b11 *
b10 #
b10 (
b11 A
b10 @
b100000101100100011001000010110100110101 D
b100 &
#5
b101 5
b0 -
0;
0?
b0 :
b0 .
0<
0=
0>
b0 7
b0 6
b10 4
b11 3
b10 $
b10 *
b11 #
b11 (
b10 A
b11 @
b100000101100100011001000010110100110110 D
b101 &
#6
10
1"
b0 ,
b0 !
b0 )
1/
12
19
1?
1>
b1000 7
b1000 6
b0 5
b0 -
b0 :
b0 .
1<
0=
b1000000000000000 4
b1000000000000000 3
b1000000000000000 $
b1000000000000000 *
b1000000000000000 #
b1000000000000000 (
1C
b0 B
b1000000000000000 A
b1000000000000000 @
b100000101100100011001000010110100110111 D
b110 &
#7
00
0"
18
b0 5
b111 -
1;
0?
b0 :
b111 .
1<
0=
b0 7
b1111 6
b1 4
b1111111111111111 3
b1 $
b1 *
b1111111111111111 #
b1111111111111111 (
0C
b1 A
b1111111111111111 @
b100000101100100011001000010110100111000 D
b111 &
#8
b1111111111111110 ,
b1111111111111110 !
b1111111111111110 )
b1111111111111110 5
b111 -
b1111 :
b111 .
1<
1=
1;
1?
18
b1111 7
b1111111111111111 4
b1111111111111111 $
b1111111111111111 *
b1111111111111110 B
b1111111111111111 A
b100000101100100011001000010110100111001 D
b1000 &
#9
b0 ,
b0 !
b0 )
b0 5
b111 -
b0 :
b111 .
1<
0=
0>
b0 6
11
b0 3
b0 $
b0 *
b0 #
b0 (
b0 B
b0 A
b0 @
b101001101110101011000100010110100110001 D
b1 '
b1 +
b1001 &
#10
b1 ,
b1 !
b1 )
b1 5
b111 -
b0 :
b111 .
1<
0=
0>
b0 6
b1 3
b1 #
b1 (
b1 B
b1 @
b101001101110101011000100010110100110010 D
b1010 &
#11
b1111111111111111 ,
b1111111111111111 !
b1111111111111111 )
0/
02
08
b1111111111111111 5
b0 -
09
0;
b1111 :
b0 .
0<
1=
1?
b1111 7
b1111111111111110 4
b0 3
b1 $
b1 *
b0 #
b0 (
b1111111111111111 B
b1 A
b0 @
b101001101110101011000100010110100110011 D
b1011 &
#12
b0 ,
b0 !
b0 )
1/
12
b0 5
b111 -
19
b0 :
b111 .
1<
0=
1;
0?
1>
18
b0 7
b1111 6
b0 4
b1111111111111111 3
b1111111111111111 $
b1111111111111111 *
b1111111111111111 #
b1111111111111111 (
b0 B
b1111111111111111 A
b1111111111111111 @
b101001101110101011000100010110100110100 D
b1100 &
#13
b1 ,
b1 !
b1 )
b1 5
b111 -
0>
b0 :
b111 .
1<
0=
1?
b1111 7
b0 6
b1111111111111101 4
b11 3
b10 $
b10 *
b11 #
b11 (
b1 B
b10 A
b11 @
b101001101110101011000100010110100110101 D
b1101 &
#14
b1111111111111110 ,
b1111111111111110 !
b1111111111111110 )
0/
02
08
b1111111111111110 5
b0 -
09
0;
1?
b1111 :
b0 .
0<
1=
b1111 7
b0 3
b0 #
b0 (
b1111111111111110 B
b0 @
b101001101110101011000100010110100110110 D
b1110 &
#15
b1 ,
b1 !
b1 )
b1 5
b0 -
b0 :
b0 .
0<
0=
0;
0?
08
b0 7
b0 4
b1111111111111111 $
b1111111111111111 *
b1 B
b1111111111111111 A
b101001101110101011000100010110100110111 D
b1111 &
#16
b1111111111111111 ,
b1111111111111111 !
b1111111111111111 )
b101010101010101 $
b101010101010101 *
b1010101010101010 #
b1010101010101010 (
b1111111111111111 B
b101010101010101 A
b1010101010101010 @
b10011100110000101101110011001000010110100110001 D
b10 '
b10 +
b10000 &
#17
b1011101110111011 ,
b1011101110111011 !
b1011101110111011 )
b110011001100110 #
b110011001100110 (
b1011101110111011 B
b110011001100110 @
b10011100110000101101110011001000010110100110010 D
b10001 &
#18
b10001000100010 ,
b10001000100010 !
b10001000100010 )
b1101110111011101 $
b1101110111011101 *
b101010101010101 #
b101010101010101 (
b10001000100010 B
b1101110111011101 A
b101010101010101 @
b100111001101111011100100010110100110001 D
b11 '
b11 +
b10010 &
#19
b110011001100110 ,
b110011001100110 !
b110011001100110 )
b1000100010001 $
b1000100010001 *
b1000100010001000 #
b1000100010001000 (
b110011001100110 B
b1000100010001 A
b1000100010001000 @
b100111001101111011100100010110100110010 D
b10011 &
#20
b1111111111111111 ,
b1111111111111111 !
b1111111111111111 )
b0 $
b0 *
b0 #
b0 (
b1111111111111111 B
b0 A
b0 @
b100111001101111011101000010110100110001 D
b100 '
b100 +
b10100 &
#21
b1111111111111110 ,
b1111111111111110 !
b1111111111111110 )
b1 #
b1 (
b1111111111111110 B
b1 @
b100111001101111011101000010110100110010 D
b10101 &
#22
b11010100000001 ,
b11010100000001 !
b11010100000001 )
b1100101011111110 #
b1100101011111110 (
b11010100000001 B
b1100101011111110 @
b100111001101111011101000010110100110011 D
b10110 &
#23
b101 ,
b101 !
b101 )
b1010 #
b1010 (
b101 B
b1010 @
b100110001110010011100110010110100110001 D
b101 '
b101 +
b10111 &
#24
b0 ,
b0 !
b0 )
b1 #
b1 (
b0 B
b1 @
b100110001110010011100110010110100110010 D
b11000 &
#25
b111111111111101 ,
b111111111111101 !
b111111111111101 )
b1111111111111010 #
b1111111111111010 (
b111111111111101 B
b1111111111111010 @
b100110001110010011100110010110100110011 D
b11001 &
#26
b111111111111111 ,
b111111111111111 !
b111111111111111 )
b1111111111111111 #
b1111111111111111 (
b111111111111111 B
b1111111111111111 @
b100110001110010011100110010110100110100 D
b11010 &
#27
b11011 &
